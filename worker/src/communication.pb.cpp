// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: communication.proto

#include "../include/communication.pb.hpp"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR WorkerPulse::WorkerPulse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.worker_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.task_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.next_pulse_)*/ ::uint64_t{0u},
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WorkerPulseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerPulseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerPulseDefaultTypeInternal() {}
  union {
    WorkerPulse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerPulseDefaultTypeInternal _WorkerPulse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PulseResponse::PulseResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.worker_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.error_)*/ 0,
    } {}
struct PulseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PulseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PulseResponseDefaultTypeInternal() {}
  union {
    PulseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PulseResponseDefaultTypeInternal _PulseResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ControlMsg::ControlMsg(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.extra_size_)*/ ::uint64_t{0u},
      /*decltype(_impl_.task_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct ControlMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlMsgDefaultTypeInternal() {}
  union {
    ControlMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlMsgDefaultTypeInternal _ControlMsg_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WorkerResponse::WorkerResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.task_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.extra_size_)*/ ::uint64_t{0u},
      /*decltype(_impl_.error_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WorkerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerResponseDefaultTypeInternal() {}
  union {
    WorkerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerResponseDefaultTypeInternal _WorkerResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_communication_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_communication_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_communication_2eproto = nullptr;
const ::uint32_t TableStruct_communication_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::WorkerPulse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::WorkerPulse, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::WorkerPulse, _impl_.worker_id_),
    PROTOBUF_FIELD_OFFSET(::WorkerPulse, _impl_.task_id_),
    PROTOBUF_FIELD_OFFSET(::WorkerPulse, _impl_.next_pulse_),
    PROTOBUF_FIELD_OFFSET(::PulseResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::PulseResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PulseResponse, _impl_.error_),
    PROTOBUF_FIELD_OFFSET(::PulseResponse, _impl_.worker_id_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::ControlMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ControlMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ControlMsg, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::ControlMsg, _impl_.extra_size_),
    PROTOBUF_FIELD_OFFSET(::ControlMsg, _impl_.task_id_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::WorkerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::WorkerResponse, _impl_.error_),
    PROTOBUF_FIELD_OFFSET(::WorkerResponse, _impl_.task_id_),
    PROTOBUF_FIELD_OFFSET(::WorkerResponse, _impl_.extra_size_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::WorkerPulse)},
        {12, 22, -1, sizeof(::PulseResponse)},
        {24, 35, -1, sizeof(::ControlMsg)},
        {38, -1, -1, sizeof(::WorkerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_WorkerPulse_default_instance_._instance,
    &::_PulseResponse_default_instance_._instance,
    &::_ControlMsg_default_instance_._instance,
    &::_WorkerResponse_default_instance_._instance,
};
const char descriptor_table_protodef_communication_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023communication.proto\"_\n\013WorkerPulse\022\030\n\004"
    "type\030\001 \001(\0162\n.PulseType\022\021\n\tworker_id\030\002 \001("
    "\004\022\017\n\007task_id\030\003 \001(\004\022\022\n\nnext_pulse\030\004 \001(\004\"V"
    "\n\rPulseResponse\022\037\n\005error\030\001 \001(\0162\020.Control"
    "lerError\022\026\n\tworker_id\030\002 \001(\004H\000\210\001\001B\014\n\n_wor"
    "ker_id\"^\n\nControlMsg\022\032\n\004type\030\001 \001(\0162\014.Con"
    "trolType\022\022\n\nextra_size\030\002 \001(\004\022\024\n\007task_id\030"
    "\003 \001(\004H\000\210\001\001B\n\n\010_task_id\"R\n\016WorkerResponse"
    "\022\033\n\005error\030\001 \001(\0162\014.WorkerError\022\017\n\007task_id"
    "\030\002 \001(\004\022\022\n\nextra_size\030\003 \001(\004*U\n\tPulseType\022"
    "\022\n\016PULSE_REGISTER\020\000\022\014\n\010PULSE_OK\020\001\022\022\n\016PUL"
    "SE_FETCH_ME\020\002\022\022\n\016PULSE_SHUTDOWN\020\003*k\n\017Con"
    "trollerError\022\017\n\013CTRL_ERR_OK\020\000\022\031\n\025CTRL_ER"
    "R_UNKNOWN_TYPE\020\001\022\027\n\023CTRL_ERR_UNKNOWN_ID\020"
    "\002\022\023\n\017CTRL_ERR_FAILED\020\003*W\n\013ControlType\022\020\n"
    "\014CTRL_RESTART\020\000\022\016\n\nCTRL_FETCH\020\001\022\021\n\rCTRL_"
    "SET_TASK\020\002\022\023\n\017CTRL_GET_STATUS\020\003*\201\001\n\013Work"
    "erError\022\021\n\rWORKER_ERR_OK\020\000\022\027\n\023WORKER_ERR"
    "_NO_FETCH\020\001\022\023\n\017WORKER_ERR_BUSY\020\002\022\032\n\026WORK"
    "ER_ERR_TASK_FAILED\020\003\022\025\n\021WORKER_ERR_FAILE"
    "D\020\004b\006proto3"
};
static ::absl::once_flag descriptor_table_communication_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_communication_2eproto = {
    false,
    false,
    811,
    descriptor_table_protodef_communication_2eproto,
    "communication.proto",
    &descriptor_table_communication_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_communication_2eproto::offsets,
    file_level_metadata_communication_2eproto,
    file_level_enum_descriptors_communication_2eproto,
    file_level_service_descriptors_communication_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_communication_2eproto_getter() {
  return &descriptor_table_communication_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_communication_2eproto(&descriptor_table_communication_2eproto);
const ::google::protobuf::EnumDescriptor* PulseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_communication_2eproto);
  return file_level_enum_descriptors_communication_2eproto[0];
}
bool PulseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ControllerError_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_communication_2eproto);
  return file_level_enum_descriptors_communication_2eproto[1];
}
bool ControllerError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ControlType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_communication_2eproto);
  return file_level_enum_descriptors_communication_2eproto[2];
}
bool ControlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* WorkerError_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_communication_2eproto);
  return file_level_enum_descriptors_communication_2eproto[3];
}
bool WorkerError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class WorkerPulse::_Internal {
 public:
};

WorkerPulse::WorkerPulse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkerPulse)
}
WorkerPulse::WorkerPulse(const WorkerPulse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WorkerPulse)
}
inline void WorkerPulse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.worker_id_){::uint64_t{0u}},
      decltype(_impl_.task_id_){::uint64_t{0u}},
      decltype(_impl_.next_pulse_){::uint64_t{0u}},
      decltype(_impl_.type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WorkerPulse::~WorkerPulse() {
  // @@protoc_insertion_point(destructor:WorkerPulse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkerPulse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void WorkerPulse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WorkerPulse::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkerPulse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.worker_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.worker_id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkerPulse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> WorkerPulse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkerPulse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 next_pulse = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerPulse, _impl_.next_pulse_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.next_pulse_)}},
    // .PulseType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkerPulse, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.type_)}},
    // uint64 worker_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerPulse, _impl_.worker_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.worker_id_)}},
    // uint64 task_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerPulse, _impl_.task_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .PulseType type = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 worker_id = 2;
    {PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.worker_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 task_id = 3;
    {PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 next_pulse = 4;
    {PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.next_pulse_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WorkerPulse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkerPulse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .PulseType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // uint64 worker_id = 2;
  if (this->_internal_worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_worker_id(), target);
  }

  // uint64 task_id = 3;
  if (this->_internal_task_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_task_id(), target);
  }

  // uint64 next_pulse = 4;
  if (this->_internal_next_pulse() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_next_pulse(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkerPulse)
  return target;
}

::size_t WorkerPulse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkerPulse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 worker_id = 2;
  if (this->_internal_worker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_worker_id());
  }

  // uint64 task_id = 3;
  if (this->_internal_task_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_task_id());
  }

  // uint64 next_pulse = 4;
  if (this->_internal_next_pulse() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_next_pulse());
  }

  // .PulseType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkerPulse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WorkerPulse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WorkerPulse::GetClassData() const { return &_class_data_; }


void WorkerPulse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkerPulse*>(&to_msg);
  auto& from = static_cast<const WorkerPulse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WorkerPulse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_worker_id() != 0) {
    _this->_internal_set_worker_id(from._internal_worker_id());
  }
  if (from._internal_task_id() != 0) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_next_pulse() != 0) {
    _this->_internal_set_next_pulse(from._internal_next_pulse());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerPulse::CopyFrom(const WorkerPulse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkerPulse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkerPulse::IsInitialized() const {
  return true;
}

void WorkerPulse::InternalSwap(WorkerPulse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.type_)
      + sizeof(WorkerPulse::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(WorkerPulse, _impl_.worker_id_)>(
          reinterpret_cast<char*>(&_impl_.worker_id_),
          reinterpret_cast<char*>(&other->_impl_.worker_id_));
}

::google::protobuf::Metadata WorkerPulse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[0]);
}
// ===================================================================

class PulseResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PulseResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_._has_bits_);
  static void set_has_worker_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PulseResponse::PulseResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PulseResponse)
}
PulseResponse::PulseResponse(const PulseResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PulseResponse)
}
inline void PulseResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.worker_id_){::uint64_t{0u}},
      decltype(_impl_.error_){0},
  };
}
PulseResponse::~PulseResponse() {
  // @@protoc_insertion_point(destructor:PulseResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PulseResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void PulseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PulseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PulseResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worker_id_ = ::uint64_t{0u};
  _impl_.error_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PulseResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PulseResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PulseResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 worker_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PulseResponse, _impl_.worker_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_.worker_id_)}},
    // .ControllerError error = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PulseResponse, _impl_.error_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ControllerError error = 1;
    {PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_.error_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional uint64 worker_id = 2;
    {PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_.worker_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PulseResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PulseResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ControllerError error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_error(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 worker_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_worker_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PulseResponse)
  return target;
}

::size_t PulseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PulseResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 worker_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_worker_id());
  }

  // .ControllerError error = 1;
  if (this->_internal_error() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PulseResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PulseResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*PulseResponse::GetClassData() const { return &_class_data_; }


void PulseResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PulseResponse*>(&to_msg);
  auto& from = static_cast<const PulseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PulseResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_worker_id(from._internal_worker_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PulseResponse::CopyFrom(const PulseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PulseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PulseResponse::IsInitialized() const {
  return true;
}

void PulseResponse::InternalSwap(PulseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_.error_)
      + sizeof(PulseResponse::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(PulseResponse, _impl_.worker_id_)>(
          reinterpret_cast<char*>(&_impl_.worker_id_),
          reinterpret_cast<char*>(&other->_impl_.worker_id_));
}

::google::protobuf::Metadata PulseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[1]);
}
// ===================================================================

class ControlMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<ControlMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_._has_bits_);
  static void set_has_task_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ControlMsg::ControlMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ControlMsg)
}
ControlMsg::ControlMsg(const ControlMsg& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ControlMsg)
}
inline void ControlMsg::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.extra_size_){::uint64_t{0u}},
      decltype(_impl_.task_id_){::uint64_t{0u}},
      decltype(_impl_.type_){0},
  };
}
ControlMsg::~ControlMsg() {
  // @@protoc_insertion_point(destructor:ControlMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ControlMsg::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void ControlMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ControlMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ControlMsg)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extra_size_ = ::uint64_t{0u};
  _impl_.task_id_ = ::uint64_t{0u};
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ControlMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ControlMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ControlMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ControlType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlMsg, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.type_)}},
    // uint64 extra_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ControlMsg, _impl_.extra_size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.extra_size_)}},
    // optional uint64 task_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ControlMsg, _impl_.task_id_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ControlType type = 1;
    {PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 extra_size = 2;
    {PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.extra_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // optional uint64 task_id = 3;
    {PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.task_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ControlMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ControlMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ControlType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // uint64 extra_size = 2;
  if (this->_internal_extra_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_extra_size(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 task_id = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_task_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ControlMsg)
  return target;
}

::size_t ControlMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ControlMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 extra_size = 2;
  if (this->_internal_extra_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_extra_size());
  }

  // optional uint64 task_id = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_task_id());
  }

  // .ControlType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ControlMsg::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ControlMsg::MergeImpl
};
const ::google::protobuf::Message::ClassData*ControlMsg::GetClassData() const { return &_class_data_; }


void ControlMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ControlMsg*>(&to_msg);
  auto& from = static_cast<const ControlMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ControlMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_extra_size() != 0) {
    _this->_internal_set_extra_size(from._internal_extra_size());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlMsg::CopyFrom(const ControlMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ControlMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ControlMsg::IsInitialized() const {
  return true;
}

void ControlMsg::InternalSwap(ControlMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.type_)
      + sizeof(ControlMsg::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ControlMsg, _impl_.extra_size_)>(
          reinterpret_cast<char*>(&_impl_.extra_size_),
          reinterpret_cast<char*>(&other->_impl_.extra_size_));
}

::google::protobuf::Metadata ControlMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[2]);
}
// ===================================================================

class WorkerResponse::_Internal {
 public:
};

WorkerResponse::WorkerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkerResponse)
}
WorkerResponse::WorkerResponse(const WorkerResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WorkerResponse)
}
inline void WorkerResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.task_id_){::uint64_t{0u}},
      decltype(_impl_.extra_size_){::uint64_t{0u}},
      decltype(_impl_.error_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WorkerResponse::~WorkerResponse() {
  // @@protoc_insertion_point(destructor:WorkerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkerResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void WorkerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WorkerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkerResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.task_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.task_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> WorkerResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .WorkerError error = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkerResponse, _impl_.error_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.error_)}},
    // uint64 task_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerResponse, _impl_.task_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.task_id_)}},
    // uint64 extra_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerResponse, _impl_.extra_size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.extra_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .WorkerError error = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 task_id = 2;
    {PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 extra_size = 3;
    {PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.extra_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WorkerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .WorkerError error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_error(), target);
  }

  // uint64 task_id = 2;
  if (this->_internal_task_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_task_id(), target);
  }

  // uint64 extra_size = 3;
  if (this->_internal_extra_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_extra_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkerResponse)
  return target;
}

::size_t WorkerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 task_id = 2;
  if (this->_internal_task_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_task_id());
  }

  // uint64 extra_size = 3;
  if (this->_internal_extra_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_extra_size());
  }

  // .WorkerError error = 1;
  if (this->_internal_error() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkerResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WorkerResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WorkerResponse::GetClassData() const { return &_class_data_; }


void WorkerResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkerResponse*>(&to_msg);
  auto& from = static_cast<const WorkerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WorkerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_task_id() != 0) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_extra_size() != 0) {
    _this->_internal_set_extra_size(from._internal_extra_size());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerResponse::CopyFrom(const WorkerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkerResponse::IsInitialized() const {
  return true;
}

void WorkerResponse::InternalSwap(WorkerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.error_)
      + sizeof(WorkerResponse::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(WorkerResponse, _impl_.task_id_)>(
          reinterpret_cast<char*>(&_impl_.task_id_),
          reinterpret_cast<char*>(&other->_impl_.task_id_));
}

::google::protobuf::Metadata WorkerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_2eproto_getter, &descriptor_table_communication_2eproto_once,
      file_level_metadata_communication_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
